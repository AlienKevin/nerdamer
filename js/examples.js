var examples = [ 
    'integrate(sin(x), x)',
    'integrate(cos(x), x)',
    'integrate(2*x^2+x, x)',
    'integrate(log(x), x)',
    'integrate(sqrt(x), x)',
    'integrate(asin(a*x), x)',
    'integrate(a/x, x)',
    'integrate(x*e^x, x)',
    'integrate(x^3*log(x), x)',
    'integrate(x^2*sin(x), x)',
    'integrate(sin(x)*log(cos(x)), x)',
    'integrate(q/((2-3*x^2)^(1/2)), x)',
    'integrate(1/(a^2+x^2), x)',
    'integrate(11/(a+5*r*x)^2,x)',
    'integrate(cos(x)*sin(x), x)',
    'integrate(x*cos(x)*sin(x), x)',
    'integrate(t/(a*x+b), x)',
    'integrate(x*(x+a)^3, x)',
    'integrate(4*x/(x^2+a^2), x)',
    'integrate(1/(x^2+3*a^2), x)',
    'integrate(8*x^3/(6*x^2+3*a^2), x)',
    'integrate(10*q/(4*x^2+24*x+20), x)',
    'integrate(x/(x+a)^2, x)',
    'integrate(sqrt(x-a), x)',
    'integrate(x^n*log(x), x)',
    'integrate(3*a*sec(x)^2, x)',
    'integrate(a/(x^2+b*x+a*x+a*b),x)',
    'integrate(log(a*x+b),x)',
    'integrate(x*log(x),x)',
    'integrate(log(a*x)/x,x)',
    'integrate(log(x)^2,x)',
    'integrate(t*log(x)^3,x)',
    'integrate(x*log(x)^2,x)',
    'integrate(x^2*log(x)^2,x)',
    'integrate(x^2*e^(a*x),x)',
    'integrate(8*e^(a*x^2),x)',
    'integrate(5*x*e^(-8*a*x^2),x)',
    'integrate(x^2*sin(x),x)',
    'integrate(8*tan(b*x)^2,x)',
    'integrate(sec(a*x)^3,x)',
    'integrate(sec(a*x)*tan(a*x),x)',
    'diff(cos(x),x)',
    'diff(log(x),x)',
    'diff(tan(x),x)',
    'diff(4*tan(x)*sec(x),x)',
    'diff(sqrt(7),x)',
    'diff(4,x)',
    'diff(x^2,x)',
    'diff(2*x^2+4,x)',
    'diff(sqrt(x)*x,x)',
    'diff(sqrt(x)-1/sqrt(x),x)',
    'diff(x^2/3-3/x^2,x)',
    'diff(sqrt(x)*(x^2+1),x)',
    'diff(e^x/(e^x-1),x)',
    'diff(e^x,x)',
    'diff(e^x/x,x)',
    'diff(tan(x)*log(1/cos(x)),x)',
    'diff((2*x)^(e),x)',
    'diff(2*cos(x)*log(x),x)',
    'diff(x*cos(x)^log(x),x)',
    'diff(cos(2*x),x)',
    'diff(cos(x)*tan(x),x)',
    'diff(sec(sqrt(cos(x^(4/5))^2)),x)',
    'diff(6*log(x)^(3*log(x^2)),x)',
    'diff(sinh(x^2)^cos(x),x)',
    'diff(tan(x)*tanh(x),x)',
    'diff(4*x*tan(x)*7*tanh(x),x)',
    'diff(y*tan(y)*7*tanh(y),x)',
    'diff(yx*tan(y)*7*tanh(y),x)',
    'diff(y,x)',
    'diff(x*y,x)',
    'sum(x+y, x, 0, 3)',
    'sum(x^2+x, x, 0, 10)',
    'sum(x^2*z^2+x*y-z+1, x, 0, 10)',
    'sum(x^2*z^2+x*y-z+1, z, 0, 10)',
    'gcd(5*x^6+5*x^5+27*x^4+27*x^3+28*x^2+28*x, 5*x^3+7*x)',
    'gcd(2*x^2+2*x+1,x+1)',
    'gcd(x^2+2*x+1,x+1)',
    'gcd(6*x^9+24*x^8+15*x^7+6*x^2+24*x+15, (2*x^2+8*x+5))',
    'gcd(x^8+4*x^7+4*x^6+3*x^5+12*x^4+12*x^3, (x^3+3))',
    'gcd(6*x^9+24*x^8+15*x^7+6*x^2+24*x+15, x^7+1)',
    'gcd(1+x^2,2*x)',
    'gcd(84*x^4+147*x^3+16*x^2+28*x, 44*x^5+77*x^4+16*x^3+28*x^2+12*x+21)',
    'gcd(5*x^11+90*x^9+361*x^7+473*x^5+72*x^3+91*x, 7150*x^12+9360*x^10+1375*x^9+1430*x^8+37550*x^7+1872*x^6+47075*x^5+7510*x^3+9360*x)',
    'gcd(7*x^4+7*x^3+4*x^2+5*x+1, 21*x^6+47*x^4+80*x^3+20*x^2+49*x+11)',
    'div(x^2*y^3+b*y^2+3*a*x^2*y+3*a*b, y^2+3*a)',
    'div(x^2, x^3)',
    'div(cos(x^2)^2+2*cos(x^2)+1, cos(x^2)+1)',
    'div(2*x^2+2*x+1, x+1)',
    'div(7*x,2*x)',
    'div(7*b*z^2+14*y*z+14*a*x^2*z-b*t*z-2*t*y-2*a*t*x^2, 7*z-t)',
    'div(x^2+5, y-1)',
    'div(4*a*x^2*y^2+4*a*y^2+b*x^2+a*x^2+b+a, x^2+1)',
    'div(4*a*x^2*y^2+4*a*y^2+b*x^2+a*x^2+b+a+u^6+1, x^2+1)',
    'div(15*x^9-25*x^7-35*x^6+6*x^5+3*x^4-10*x^3-19*x^2-7*x, 3*x^3-5*x-7)',
    'div(sin(x)^2*tan(x)-4*cos(x)*tan(x)+cos(x)*sin(x)^2-4*cos(x)^2, sin(x)^2-4*cos(x)^2)',
    'div(-5*y^2+16*a*y+5*x^4+14*a*x^2-3*a^2, 3*a-y+x^2)',
    'div(y^2+2*x*y+x^2,x+y)',
    'div(x*y^2+x^2*y-y-x, x*y-1)',
    'div(y^2*z-4*x*z+x*y^2-4*x^2+x^2, y^2-4*x^2)',
    'div(7*x^6*z-a*x*z+28*a*x^6*y^3-4*a^2*x*y^3+7*b*x^6-a*b*x, 4*y^3*a+z+b)',
    'div(x^2+5, cos(x)-1)',
    'div((1+z), t*x+7)',
    'div(-x^2*y-y+4*a*x^2+t+4*a+6*b, x^2+1)',
    'div(15*x^9-25*x^7-35*x^6+6*x^5+3*x^4-10*x^3-19*x^2-7*x+y, 3*x^3-5*x-7)',
    'div(x^2+2*x+1+u, x+1)',
    'div(y^3+x*y^2+x^2*y+x^3+x, x+y)',
    'div(b*y*z+7*x^6*z-a*x*z-7*z+4*a*b*y^4+28*a*x^6*y^3-4*a^2*x*y^3-28*a*y^3+b^2*y+7*b*x^6-a*b*x-7*b, 4*y^3*a+z+b)',
    'div(b*y*z-a*x*z+4*a*b*y^4-4*a^2*x*y^3+b^2*y-a*b*x, 4*y^3*a+z+b)',
    'x^2+1',
    '51/x',
    'x^2+1/x',
    'y*x^2+1/x',
    'y*x^2+x',
    '7*y*x^2+z*x+4',
    '7*y*x^2+z*x^-1+4',
    'sqrt(5*x)+7',
    'abs(5*x^3)-x+7',
    'abs(5*x^2)-x+11',
    'cos(x)^2+cos(x)+1',
    'expand((9*y*x+1)^2)',
    'expand((x+5)*(x-3)-x^2)',
    '(9*y*x+1)^3',
    '(81*(x*y)^2+9*x*y)*(9*x*y)',
    '2*((81*(x*y)^2+9*x*y))*(5*(9*x*y))',
    'expand((9*y*x+1)^3)',
    'expand(x*(x+1))',
    'expand(x*(x+1)^5)',
    'expand((x*y)^x+(x*y)^2)',
    'expand((3*x+4*y)^4)',
    '((((((1+1))))))',
    '((((((1+1))+4)))+3)',
    '1+1',
    '4^2',
    '2*-4',
    '2+(3/4)',
    '2/3+2/3',
    'x+x',
    'x+1',
    'x+y',
    '-9-x+y-11',
    '(x+1)+(1+x)',
    '9+(x+1)-(1+x)',
    '0-x-2*x+6',
    '(x+y)+(a+x)',
    '7*(x+y)+2*(a+x)',
    '(x+x^2)+x',
    '(x+1)+4',
    'x+x+1+x',
    '(x+1)+(8+y)',
    '(x+1)+(a+y)',
    '(x+x^2)+(x^3+x)',
    '3*(x+x^2)+5*(x^3+x)',
    'x^y+x^y',
    '2^(1/2)',
    '3/4/-5/7',
    '(2/5)^(1/2)',
    '2^(1/2)+sqrt(2)',
    'sqrt(2)*sqrt(2)',
    'x*x',
    '-x*x',
    '-x*-x',
    'sqrt(1/2)',
    '74689676.31109099*sqrt(5578547747455547)',
    'sqrt(1+x)^(4*x)',
    'sqrt(2)^2',
    '6*sqrt(2)^4',
    'sqrt(x^2)*sqrt(x^4)',
    'sqrt((5/2)*x^10)',
    '(sqrt((5/2)*x^10))*-sqrt(2)',
    'y*tan(x)*tan(x)',
    '5*(x+x^2)*(2*(x+x^2)^x)',
    '2*(1+x)*3*(z+x)^x*8',
    '(x+1)^x*(z+1)^z*(x+1)',
    '2*cos(x)+cos(x)',
    '2*cos(x)+cos(x+8+5*x)',
    'x^2+2*cos(x)+cos(x+8+5*x)+4*x^2',
    'x-y',
    'x-x',
    '3*(x^2+1)^x*(2*(x^2+1))',
    '2*(x+x^2)+1',
    '2*(x+x^2)+3*(x^2+x^3)',
    '2*(x+x^2)+3*(x^2+x^3)^2',
    '2*(x+x^2)+3*(x^2+x^3)^2+x',
    '2*(x+x^2)+3*(x^2+x^3)^2+(x^2+x)',
    '2*(x+x^2)^2+3*(x^2+x)^2',
    '2*(x+x^2)^2+2*(x+x^2)^3+4*(x+x^2)^2',
    '2*x^2+3*x+y+y^2',
    '(y+y^2)^6+y',
    '2*(x+x^2)+(y+y^2)^6+y',
    '2*(x+x^2)+4',
    '2*(x+x^2)+48*x*y',
    '2*(x+x^2)+(48+x+2*y)',
    'cos(x)+(x+x^2+x)',
    'cos(x)+(x+x^2+7)',
    '(x^2+1)-1',
    '(x^2+1)-1+x+x^3+x',
    '5+(x^2+y+1)+(x+y+15)',
    '(x^2+y+1)+(x+y+15)+(x^2+y+1)',
    '(x^2+y+1)+(x+x^2)',
    '(1+(1+x)^2)',
    '(x+x)^x',
    '1/4*2^x*x^x',
    'x^2+x-x^y+x',
    'x^x+x^x-1-2*x^x',
    'x^x+x^x-1-2*x^x+2*y+1-2*y',
    '(x+1)-x*y-5+2*x*y',
    '(2*x-y+7-x+y-x-5)*2+15/3',
    '6.5*2',
    'x*2',
    'x*y',
    'cos(x)*cos(x)',
    '(x+x^2)*(x+x^2)',
    '(x+x^2)*2*(x+x^2)',
    '(x*y)*(x*y)',
    '(x*y)*(x*z)',
    '(x+y)*(x+y)',
    '(x+y)*(y+x)',
    '(1+x)*(x+y)',
    'x*y*x',
    'x*y*x/x',
    'x*y*x/x/x/y',
    'x^x*cos(x)*sin(x)/x',
    '(x+x^2)^x*x',
    '(x+x^2)^x*(x+x^x)',
    '(x+x^2)^x*(x+x^2)',
    '(x+x^2)^2*x',
    '(z+z^2)^x*(x+y^2+1)',
    'tan(x)*tan(x)',
    '(x+1)/(x+1)',
    'x*y*z/(x*y*z)',
    'x^y/x^y',
    '5*x^y/x^y',
    '(x+x^6)^y/(x+x^6)^y',
    '2^y*2^y',
    '2^x',
    '((x^3+x)^x*(x^2+x)^x+1)*x',
    'x^x',
    'x^(x)',
    'y^y^3',
    'sqrt(9)',
    'sqrt(-9)',
    'sqrt(-x)',
    'sqrt(-x)*sqrt(-x)',
    'sqrt(-x)*sqrt(-x)+4*x',
    '4*x^2',
    'sqrt(4*x^2)',
    '2*cos(x)+5*cos(2*x)',
    '2*cos(x)*5*cos(2*x)',
    '(8*x)^(2/3)',
    '(y^3+2)/(z^4*(y^3/2))^2*cos(x)*sqrt(x)',
    '2*x^4*(1+log(x)^2)-(-x^4)',
    '(x^6)^(1/4)',
    'i*i',
    'i*8*i',
    'i^(2/3)',
    '(256*i)^(1/8)',
    '2*x*(4^(1/3))^3',
    '6*(4^(1/3)*4^(2/3))',
    '(5*(4^(1/3)))^3',
    '2*x*(5*(4^(1/3)))^3',
    'y^y^y',
    '(x^4)^(1/4)',
    'x/cos(x)*cos(x)',
    '(-2*x)^2',
    '-4*x^3--x^3+x^2-(-2*x)^2+y',
    '2*x/x',
    '2*(tan(x)+tan(2*x)+7)-6*tan(x)',
    '(x^2*y)^2',
    '((3+y)*2-(cos(x)*4+z))',
    'i/i',
    '(1/i)*i',
    'cos(x^2)*cos(x^2)^x',
    '(x+1)^(z+1)*(1+x)^(1+z)',
    '(x+1)^(z+1)*(1+x)^4',
    '(-1)^x',
    'e^(i*pi)+e^(2*i*pi)',
    '(x+y)--(x+y)',
    '-z-(r+x)--(r+x)',
    '+-z-(r+x)+--+(r+x)',
    '(-2/3*x)^x',
    '(x)^(3-x)',
    '(1/2*x)^(1/2)',
    '256^(1/8)',
    '-2*256^(1/8)',
    '(81*(x*y)^2+9*x*y)+(9*x*y)',
    'sqrt((1/2*x)^(1/2))',
    'sqrt(4*sqrt(2)^(-1)*x^(1/2))',
    'sqrt(4+x)',
    'cos(pi)',
    'cos(x)',
    'cos(2*pi)',
    'cos(2*pi/3)',
    'cos(3*pi/4)',
    'sin(x)',
    'sin(pi)',
    'sin(pi/2)',
    'sin(-pi/2)',
    'sin(3*pi/4)',
    'tan(x)',
    'tan(3*pi/4)',
    'tan(2*pi/3)',
    'tan(4*pi/3)',
    'tan(pi/3)',
    'tan(pi)',
    'sec(pi)',
    'sec(2*pi/3)',
    'sec(4*pi/3)',
    'sec(5*pi/3)',
    'sec(pi/6)',
    'csc(5*pi/3)',
    'cot(2*pi/3)',
    'cot(4*pi/3)',
    'cot(5*pi/6)',
    '(1/2)*x^(1/2)+sqrt(x)',
    'sqrt((4+x)^2)',
    '2*sqrt(3/4)',
    'sqrt(2)*sqrt(8)',
    'sqrt(242)',
    'sqrt(4)^-1',
    'log(e)',
    'log(e^e)',
    'log(1/e^e)',
    '((x)^(1/2)*x^(1/3))-x^(5/6)',
    'cross([a, x, 1],[b, y, 2])',
    'dot([a, x, 1],[b, y, 2])',
    'invert(matrix([a^2, b], [b^2, 4]))*matrix([3],[4])',
];

//var nerdamer = require('../js/nerdamer.core');
//require('../js/Algebra')
//require('../js/Calculus')



var parsed = [], //the parsed expression container
    TeX = [], //the generated LaTeX container
    parsedTeX = [], //the parsed LaTeX container
    benchmarks = {}, //the benchmark time container
    l = examples.length,
    parsing = 'parsing', //the name for the parsing time in the benchmark container
    LaTeX = 'LaTeX',//the name for the LaTeX  time in the benchmark container
    KaTeX = 'KaTeX';//the name for the LaTeX  time in the benchmark container

var benchmark = function(callback, name) {
    var start = new Date();
    callback.call();
    var end = new Date();
    benchmarks[name] = Math.abs(end.getTime() - start.getTime());
};

//benchmark the parsing of the expressions and place them in the parsed container
benchmark(function() {
    for(var i=0; i<l; i++) 
        parsed.push(nerdamer(examples[i]));
}, parsing);
//benchmark how long it took for generation of LaTeX
benchmark(function() {
    for(var i=0; i<l; i++) {
        TeX.push(parsed[i].toTeX());
    }
}, LaTeX);
//benchmark how long it took for generation of LaTeX
benchmark(function() {
    for(var i=0; i<l; i++) 
        parsedTeX.push(katex.renderToString(TeX[i]));
}, KaTeX);

$(function() {
    $('.number-expressions').html(l);
    $('.'+parsing).html(benchmarks[parsing]+' ms');
    $('.'+LaTeX).html(benchmarks[LaTeX]+' ms');
    $('.'+KaTeX).html(benchmarks[KaTeX]+' ms');
    
    var table = $('#result-table');
    for(var i=0; i<l; i++) {
        var row = $('<div/>', {class: 'example'})
                .append($('<div class="expression-raw">'+examples[i]+'</div>'))
                .append($('<div class="expression-parsed">'+parsed[i].toString()+'</div>'))
                .append($('<div/>', {class: "parsed-tex"}).html(parsedTeX[i]));
        table.append(row);
    }
    
    $('#calculating').hide();
});